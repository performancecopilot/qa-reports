Trying to compile config /var/tmp/1171-1458803.conf ...
No compile+load errors detected, but that does not guarantee all is well ...
Log for pmdabcc on runnervmzdgdc started Fri Oct 17 20:22:59 2025

[Fri Oct 17 20:22:59] pmdabcc(1458875) Info: Enabled modules:
[Fri Oct 17 20:22:59] pmdabcc(1458875) Info: ['profile']
[Fri Oct 17 20:22:59] pmdabcc(1458875) Info: Configuring modules:
[Fri Oct 17 20:22:59] pmdabcc(1458875) Info: profile
[Fri Oct 17 20:22:59] pmdabcc(1458875) Info: Modules configured.
[Fri Oct 17 20:22:59] pmdabcc(1458875) Info: Initializing modules:
[Fri Oct 17 20:22:59] pmdabcc(1458875) Info: profile
[Fri Oct 17 20:22:59] pmdabcc(1458875) Info: profile: Initialized.
[Fri Oct 17 20:22:59] pmdabcc(1458875) Info: Modules initialized.
[Fri Oct 17 20:22:59] pmdabcc(1458875) Info: Registering metrics:
[Fri Oct 17 20:22:59] pmdabcc(1458875) Info: profile
[Fri Oct 17 20:22:59] pmdabcc(1458875) Info: Metrics registered.
[Fri Oct 17 20:22:59] pmdabcc(1458875) Info: Registering helpers:
[Fri Oct 17 20:22:59] pmdabcc(1458875) Info: Helpers registered.
[Fri Oct 17 20:22:59] pmdabcc(1458875) Info: Compiling modules:
[Fri Oct 17 20:22:59] pmdabcc(1458875) Info: profile
[Fri Oct 17 20:22:59] pmdabcc(1458875) Info: Modules compiled.

Log finished Fri Oct 17 20:22:59 2025
_prepare_pmda(agent=bcc, names=bcc) __install_on_cleanup=false
pmdabcc config:
# Installed by PCP QA test 1171 on Fri Oct 17 20:22:59 UTC 2025
[pmda]
modules = profile
prefix = bcc.
[profile]
module = profile
cluster = 14
=== _pmdabcc_wait_for_metric: after 0 secs, metrics should be available ===
=== _pmdabcc_wait_for_metric: after another 1 secs, values are available ===

bcc.proc.profile
    value "{"status": "stopped", "data": null}"
Log for pmdabcc on runnervmzdgdc started Fri Oct 17 20:23:01 2025

[Fri Oct 17 20:23:01] pmdabcc(1459279) Info: Initializing, currently in 'notready' state.
[Fri Oct 17 20:23:01] pmdabcc(1459279) Info: Enabled modules:
[Fri Oct 17 20:23:01] pmdabcc(1459279) Info: ['profile']
[Fri Oct 17 20:23:01] pmdabcc(1459279) Info: Configuring modules:
[Fri Oct 17 20:23:01] pmdabcc(1459279) Info: profile
[Fri Oct 17 20:23:01] pmdabcc(1459279) Info: Modules configured.
[Fri Oct 17 20:23:01] pmdabcc(1459279) Info: Initializing modules:
[Fri Oct 17 20:23:01] pmdabcc(1459279) Info: profile
[Fri Oct 17 20:23:01] pmdabcc(1459279) Info: profile: Initialized.
[Fri Oct 17 20:23:01] pmdabcc(1459279) Info: Modules initialized.
[Fri Oct 17 20:23:01] pmdabcc(1459279) Info: Registering metrics:
[Fri Oct 17 20:23:01] pmdabcc(1459279) Info: profile
[Fri Oct 17 20:23:01] pmdabcc(1459279) Info: Metrics registered.
[Fri Oct 17 20:23:01] pmdabcc(1459279) Info: Registering helpers:
[Fri Oct 17 20:23:01] pmdabcc(1459279) Info: Helpers registered.
[Fri Oct 17 20:23:01] pmdabcc(1459279) Info: Compiling modules:
[Fri Oct 17 20:23:01] pmdabcc(1459279) Info: profile
[Fri Oct 17 20:23:01] pmdabcc(1459279) Info: Modules compiled.
[Fri Oct 17 20:23:01] pmdabcc(1459279) Info: Freeing memory:
[Fri Oct 17 20:23:01] pmdabcc(1459279) Info: profile
[Fri Oct 17 20:23:01] pmdabcc(1459279) Info: Memory freed.
[Fri Oct 17 20:23:01] pmdabcc(1459279) Info: Ready to process requests.
[Fri Oct 17 20:23:03] pmdabcc(1459279) Info: profile: Starting profiling...
In file included from /virtual/main.c:4:
In file included from include/uapi/linux/ptrace.h:183:
In file included from arch/x86/include/asm/ptrace.h:175:
In file included from arch/x86/include/asm/paravirt_types.h:12:
In file included from arch/x86/include/asm/nospec-branch.h:15:
arch/x86/include/asm/current.h:47:10: warning: multiple identical address spaces specified for type [-Wduplicate-decl-specifier]
   47 |                 return this_cpu_read_const(const_pcpu_hot.current_task);
      |                        ^
arch/x86/include/asm/percpu.h:578:36: note: expanded from macro 'this_cpu_read_const'
  578 | #define this_cpu_read_const(pcp)                        __raw_cpu_read_const(pcp)
      |                                                         ^
arch/x86/include/asm/percpu.h:163:35: note: expanded from macro '__raw_cpu_read_const'
  163 | #define __raw_cpu_read_const(pcp)       __raw_cpu_read(, , pcp)
      |                                         ^
arch/x86/include/asm/percpu.h:155:30: note: expanded from macro '__raw_cpu_read'
  155 |         *(qual __my_cpu_type(pcp) *)__my_cpu_ptr(&(pcp));               \
      |                                     ^
note: (skipping 1 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
arch/x86/include/asm/percpu.h:94:40: note: expanded from macro '__my_cpu_type'
   94 | #define __my_cpu_type(var)      typeof(var) __percpu_seg_override
      |                                             ^
arch/x86/include/asm/percpu.h:45:32: note: expanded from macro '__percpu_seg_override'
   45 | # define __percpu_seg_override  __seg_gs
      |                                 ^
<built-in>:358:33: note: expanded from macro '__seg_gs'
  358 | #define __seg_gs __attribute__((address_space(256)))
      |                                 ^
In file included from /virtual/main.c:4:
In file included from include/uapi/linux/ptrace.h:183:
In file included from arch/x86/include/asm/ptrace.h:175:
In file included from arch/x86/include/asm/paravirt_types.h:12:
In file included from arch/x86/include/asm/nospec-branch.h:15:
arch/x86/include/asm/current.h:47:10: warning: multiple identical address spaces specified for type [-Wduplicate-decl-specifier]
arch/x86/include/asm/percpu.h:578:36: note: expanded from macro 'this_cpu_read_const'
  578 | #define this_cpu_read_const(pcp)                        __raw_cpu_read_const(pcp)
      |                                                         ^
arch/x86/include/asm/percpu.h:163:35: note: expanded from macro '__raw_cpu_read_const'
  163 | #define __raw_cpu_read_const(pcp)       __raw_cpu_read(, , pcp)
      |                                         ^
arch/x86/include/asm/percpu.h:155:9: note: expanded from macro '__raw_cpu_read'
  155 |         *(qual __my_cpu_type(pcp) *)__my_cpu_ptr(&(pcp));               \
      |                ^
arch/x86/include/asm/percpu.h:94:40: note: expanded from macro '__my_cpu_type'
   94 | #define __my_cpu_type(var)      typeof(var) __percpu_seg_override
      |                                             ^
arch/x86/include/asm/percpu.h:45:32: note: expanded from macro '__percpu_seg_override'
   45 | # define __percpu_seg_override  __seg_gs
      |                                 ^
<built-in>:358:33: note: expanded from macro '__seg_gs'
  358 | #define __seg_gs __attribute__((address_space(256)))
      |                                 ^
In file included from /virtual/main.c:5:
In file included from include/uapi/linux/bpf_perf_event.h:11:
In file included from arch/x86/include/generated/uapi/asm/bpf_perf_event.h:1:
In file included from include/uapi/asm-generic/bpf_perf_event.h:4:
In file included from include/linux/ptrace.h:6:
In file included from include/linux/sched.h:13:
arch/x86/include/asm/processor.h:564:10: warning: multiple identical address spaces specified for type [-Wduplicate-decl-specifier]
  564 |                 return this_cpu_read_const(const_pcpu_hot.top_of_stack);
      |                        ^
arch/x86/include/asm/percpu.h:578:36: note: expanded from macro 'this_cpu_read_const'
  578 | #define this_cpu_read_const(pcp)                        __raw_cpu_read_const(pcp)
      |                                                         ^
arch/x86/include/asm/percpu.h:163:35: note: expanded from macro '__raw_cpu_read_const'
  163 | #define __raw_cpu_read_const(pcp)       __raw_cpu_read(, , pcp)
      |                                         ^
arch/x86/include/asm/percpu.h:155:30: note: expanded from macro '__raw_cpu_read'
  155 |         *(qual __my_cpu_type(pcp) *)__my_cpu_ptr(&(pcp));               \
      |                                     ^
note: (skipping 1 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
arch/x86/include/asm/percpu.h:94:40: note: expanded from macro '__my_cpu_type'
   94 | #define __my_cpu_type(var)      typeof(var) __percpu_seg_override
      |                                             ^
arch/x86/include/asm/percpu.h:45:32: note: expanded from macro '__percpu_seg_override'
   45 | # define __percpu_seg_override  __seg_gs
      |                                 ^
<built-in>:358:33: note: expanded from macro '__seg_gs'
  358 | #define __seg_gs __attribute__((address_space(256)))
      |                                 ^
In file included from /virtual/main.c:5:
In file included from include/uapi/linux/bpf_perf_event.h:11:
In file included from arch/x86/include/generated/uapi/asm/bpf_perf_event.h:1:
In file included from include/uapi/asm-generic/bpf_perf_event.h:4:
In file included from include/linux/ptrace.h:6:
In file included from include/linux/sched.h:13:
arch/x86/include/asm/processor.h:564:10: warning: multiple identical address spaces specified for type [-Wduplicate-decl-specifier]
arch/x86/include/asm/percpu.h:578:36: note: expanded from macro 'this_cpu_read_const'
  578 | #define this_cpu_read_const(pcp)                        __raw_cpu_read_const(pcp)
      |                                                         ^
arch/x86/include/asm/percpu.h:163:35: note: expanded from macro '__raw_cpu_read_const'
  163 | #define __raw_cpu_read_const(pcp)       __raw_cpu_read(, , pcp)
      |                                         ^
arch/x86/include/asm/percpu.h:155:9: note: expanded from macro '__raw_cpu_read'
  155 |         *(qual __my_cpu_type(pcp) *)__my_cpu_ptr(&(pcp));               \
      |                ^
arch/x86/include/asm/percpu.h:94:40: note: expanded from macro '__my_cpu_type'
   94 | #define __my_cpu_type(var)      typeof(var) __percpu_seg_override
      |                                             ^
arch/x86/include/asm/percpu.h:45:32: note: expanded from macro '__percpu_seg_override'
   45 | # define __percpu_seg_override  __seg_gs
      |                                 ^
<built-in>:358:33: note: expanded from macro '__seg_gs'
  358 | #define __seg_gs __attribute__((address_space(256)))
      |                                 ^
4 warnings generated.
[Fri Oct 17 20:23:05] pmdabcc(1459279) Info: profile: Started profiling.
[Fri Oct 17 20:23:11] pmdabcc(1459279) Info: profile: Stopping profiling...
ioctl(PERF_EVENT_IOC_DISABLE) failed: Inappropriate ioctl for device
Exception in thread Thread-3 (stop_profiling):
Traceback (most recent call last):
  File "/usr/lib/python3.12/threading.py", line 1073, in _bootstrap_inner
    self.run()
  File "/usr/lib/python3.12/threading.py", line 1010, in run
    self._target(*self._args, **self._kwargs)
  File "/usr/lib/pcp/pmdas/bcc/modules/profile.py", line 272, in stop_profiling
    super(PCPBCCModule, self).cleanup()
  File "/usr/lib/pcp/pmdas/bcc/modules/pcpbcc.py", line 104, in cleanup
    self.bpf.cleanup()
  File "/usr/lib/python3/dist-packages/bcc/__init__.py", line 1794, in cleanup
    self.detach_perf_event(ev_type, ev_config)
  File "/usr/lib/python3/dist-packages/bcc/__init__.py", line 1289, in detach_perf_event
    raise Exception("Failed to detach BPF from perf event")
Exception: Failed to detach BPF from perf event
_wait_for_pmlogger() success at iter 0 ...
Connected to primary pmlogger at local:
pmlogger [primary] on host local: is logging metrics from host runnervmzdgdc
PMCD host        runnervmzdgdc
log started      Fri Oct 17 20:23:23.433707139 2025 (times in local time)
last log entry   Fri Oct 17 20:23:24.008293301 2025
current time     Fri Oct 17 20:23:24.011310306 2025
log volume       0
log size         53544
_cleanup_pmda(bcc,) remove PMDA
_wait_for_pmlogger() success at iter 0 ...
Connected to primary pmlogger at local:
pmlogger [primary] on host local: is logging metrics from host runnervmzdgdc
PMCD host        runnervmzdgdc
log started      Fri Oct 17 20:23:23.433707139 2025 (times in local time)
last log entry   Fri Oct 17 20:23:24.026401725 2025
current time     Fri Oct 17 20:23:25.728586960 2025
log volume       0
log size         170908
