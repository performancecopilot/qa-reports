{"uid":"65ce64b13ed88a4f","name":"QA 662","fullName":"QA #662 on fedora42-container","historyId":"662@fedora42-container","time":{"start":1761421935000,"stop":1761421949000,"duration":14000},"description":"PCP QA Test No. 662\n\nExercises REST API functionality using python requests module\n\n\n\nCopyright (c) 2013-2015,2019 Red Hat.\n\n\n\nseq=`basename $0`\n\necho \"QA output created by $seq\"\n\n","descriptionHtml":"<p>PCP QA Test No. 662</p>\n<p>Exercises REST API functionality using python requests module</p>\n<p>Copyright (c) 2013-2015,2019 Red Hat.</p>\n<p>seq=<code>basename $0</code></p>\n<p>echo &quot;QA output created by $seq&quot;</p>\n","status":"passed","statusMessage":"","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"suite","value":"fedora42-container"},{"name":"host","value":"fedora42-container"},{"name":"epic","value":"pmproxy"},{"name":"epic","value":"pmda.sample"},{"name":"epic","value":"local"},{"name":"epic","value":"python"},{"name":"epic","value":"pmda.sample"},{"name":"epic","value":"help"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[{"name":"Source","url":"https://github.com/performancecopilot/pcp/tree/7ece8cc1108951c8d18f5df575f46b2a0cfcacca/qa/662","type":"test_case"},{"name":"Expected output","url":"https://github.com/performancecopilot/pcp/tree/7ece8cc1108951c8d18f5df575f46b2a0cfcacca/qa/662.out","type":"test_case"}],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":5,"broken":0,"skipped":0,"passed":156,"unknown":0,"total":161},"items":[{"uid":"75c9eec9455c640f","reportUrl":"https://performancecopilot.github.io/qa-reports/reports/20251024_212524-7ece8cc1//#testresult/75c9eec9455c640f","status":"passed","statusDetails":"","time":{"start":1761335593000,"stop":1761335607000,"duration":14000}},{"uid":"b2285bb176821420","reportUrl":"https://performancecopilot.github.io/qa-reports/reports/20251023_212002-95afa073//#testresult/b2285bb176821420","status":"passed","statusDetails":"","time":{"start":1761249028000,"stop":1761249040000,"duration":12000}},{"uid":"5b8774afb297650c","reportUrl":"https://performancecopilot.github.io/qa-reports/reports/20251022_212354-95afa073//#testresult/5b8774afb297650c","status":"passed","statusDetails":"","time":{"start":1761162983000,"stop":1761162997000,"duration":14000}},{"uid":"40a3528b6eeee281","reportUrl":"https://performancecopilot.github.io/qa-reports/reports/20251021_212327-68aa730c//#testresult/40a3528b6eeee281","status":"passed","statusDetails":"","time":{"start":1761076107000,"stop":1761076119000,"duration":12000}},{"uid":"c45f6b44dc9f78f7","reportUrl":"https://performancecopilot.github.io/qa-reports/reports/20251020_214124-4482d6ae//#testresult/c45f6b44dc9f78f7","status":"failed","statusDetails":"output mismatch (see 662.out.bad)\n1a2,37\n> Traceback (most recent call last):\n>   File \"/usr/lib/python3.13/site-packages/requests/models.py\", line 820, in generate\n>     yield from self.raw.stream(chunk_size, decode_content=True)\n>   File \"/usr/lib/python3.13/site-packages/urllib3/response.py\", line 1063, in stream\n>     yield from self.read_chunked(amt, decode_content=decode_content)\n>   File \"/usr/lib/python3.13/site-packages/urllib3/response.py\", line 1219, in read_chunked\n>     self._update_chunk_length()\n>     ~~~~~~~~~~~~~~~~~~~~~~~~~^^\n>   File \"/usr/lib/python3.13/site-packages/urllib3/response.py\", line 1149, in _update_chunk_length\n>     raise ProtocolError(\"Response ended prematurely\") from None\n> urllib3.exceptions.ProtocolError: Response ended prematurely\n> \n> During handling of the above exception, another exception occurred:\n> \n> Traceback (most recent call last):\n>   File \"/var/lib/pcp/testsuite/src/test_webapi.py\", line 111, in <module>\n>     test_metric_enumeration(ctx_host,'')\n>     ~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^\n>   File \"/var/lib/pcp/testsuite/src/test_webapi.py\", line 84, in test_metric_enumeration\n>     req = requests.get(url=ctxurl + '_metric' + \\\n>                            ('?prefix='+prefix if prefix != '' else ''))\n>   File \"/usr/lib/python3.13/site-packages/requests/api.py\", line 73, in get\n>     return request(\"get\", url, params=params, **kwargs)\n>   File \"/usr/lib/python3.13/site-packages/requests/api.py\", line 59, in request\n>     return session.request(method=method, url=url, **kwargs)\n>            ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n>   File \"/usr/lib/python3.13/site-packages/requests/sessions.py\", line 589, in request\n>     resp = self.send(prep, **send_kwargs)\n>   File \"/usr/lib/python3.13/site-packages/requests/sessions.py\", line 746, in send\n>     r.content\n>   File \"/usr/lib/python3.13/site-packages/requests/models.py\", line 902, in content\n>     self._content = b\"\".join(self.iter_content(CONTENT_CHUNK_SIZE)) or b\"\"\n>                     ~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n>   File \"/usr/lib/python3.13/site-packages/requests/models.py\", line 822, in generate\n>     raise ChunkedEncodingError(e)\n> requests.exceptions.ChunkedEncodingError: Response ended prematurely\n8,459d43\n< context #### host metric .* enumeration with pmwebinfo ####\n< context #### host metric .* enumeration match count PASS\n< context #### host-kernel metric kernel.* enumeration with pminfo ####\n< context #### host-kernel metric kernel.* enumeration with pmwebinfo ####\n< context #### host-kernel metric kernel.* enumeration match count PASS\n< context #### response code 400\n< context #### fetch names= response code 400\n< context #### fetch name=no.such.metric response code 400\n< context #### fetch names=no.such.metric1,pmcd.client.whoami,no.such.metric2 response code 200\n< timestamps fields:2 len(values[]):1\n<   metric:pmcd.client.whoami\n<   with instances\n< context #### fetch names=sample.event.records response code 200\n< timestamps fields:2 len(values[]):1\n<   metric:sample.event.records\n<   with instances\n< context #### fetch pmids=121634826,0x740000b response code 200\n< timestamps fields:2 len(values[]):2\n<   metric:sample.long.one\n<   with instances\n<   metric:sample.long.ten\n<   with instances\n< context #### fetch name=keepalive response code 400\n< context #### fetch names=sample.bogus_bin,sample.sysinfo,sample.byte_rate,sample.ulong.bin response code 200\n< timestamps fields:2 len(values[]):4\n<   metric:sample.bogus_bin\n<   with instances\n<   metric:sample.byte_rate\n<   with instances\n<   metric:sample.sysinfo\n<   with instances\n<   metric:sample.ulong.bin\n<   with instances\n< context #### fetch names=sample.longlong.bin,,,sample.ulonglong.million,sample.float.hundred response code 200\n< timestamps fields:2 len(values[]):3\n<   metric:sample.float.hundred\n<   with instances\n<   metric:sample.longlong.bin\n<   with instances\n<   metric:sample.ulonglong.million\n<   with instances\n< context #### fetch names=sample.double.bin_ctr,sample.aggregate.null,sample.hordes.one response code 200\n< timestamps fields:2 len(values[]):3\n<   metric:sample.aggregate.null\n<   with instances\n<   metric:sample.double.bin_ctr\n<   with instances\n<   metric:sample.hordes.one\n<   with instances\n< context #### fetch names=sample.dodgey.value response code 200\n< timestamps fields:2 len(values[]):1\n<   metric:sample.dodgey.value\n<   with instances\n< context #### fetch pmid=blargh response code 400\n< context #### metadata prefix=no.such.metric response code 400\n< context #### metadata prefix=no.such.metric1,pmcd.client.whoami,no.such.metric2 response code 200\n< len(metrics[]):3\n<   metric:no.such.metric1 metadata:3\n<   metric:no.such.metric2 metadata:3\n<   metric:pmcd.client.whoami metadata:10\n< context #### metadata prefix=sample response code 200\n< len(metrics[]):213\n<   metric:sample.aggregate.hullo metadata:9\n<   metric:sample.aggregate.null metadata:9\n<   metric:sample.aggregate.write_me metadata:9\n<   metric:sample.bad.fetch.again metadata:9\n<   metric:sample.bad.nosupport metadata:9\n<   metric:sample.bad.novalues metadata:9\n<   metric:sample.bad.unknown metadata:3\n<   metric:sample.bigid metadata:9\n<   metric:sample.bin metadata:10\n<   metric:sample.bogus_bin metadata:10\n<   metric:sample.bucket metadata:10\n<   metric:sample.byte_ctr metadata:9\n<   metric:sample.byte_rate metadata:9\n<   metric:sample.byte_rate_perhour metadata:9\n<   metric:sample.colour metadata:10\n<   metric:sample.const_rate.gradient metadata:9\n<   metric:sample.const_rate.value metadata:9\n<   metric:sample.control metadata:9\n<   metric:sample.controller.mirage metadata:9\n<   metric:sample.daemon_pid metadata:9\n<   metric:sample.darkness metadata:10\n<   metric:sample.datasize metadata:9\n<   metric:sample.dodgey.control metadata:9\n<   metric:sample.dodgey.value metadata:10\n<   metric:sample.double.bin metadata:10\n<   metric:sample.double.bin_ctr metadata:10\n<   metric:sample.double.hundred metadata:9\n<   metric:sample.double.million metadata:9\n<   metric:sample.double.one metadata:9\n<   metric:sample.double.ten metadata:9\n<   metric:sample.double.write_me metadata:9\n<   metric:sample.drift metadata:9\n<   metric:sample.dupnames.daemon_pid metadata:9\n<   metric:sample.dupnames.five.bin metadata:10\n<   metric:sample.dupnames.five.bucket metadata:10\n<   metric:sample.dupnames.five.long_bin metadata:10\n<   metric:sample.dupnames.five.part_bin metadata:10\n<   metric:sample.dupnames.four.bin metadata:10\n<   metric:sample.dupnames.four.colour metadata:10\n<   metric:sample.dupnames.pid_daemon metadata:9\n<   metric:sample.dupnames.three.bin metadata:10\n<   metric:sample.dupnames.three.write_me metadata:9\n<   metric:sample.dupnames.two.bin metadata:10\n<   metric:sample.dupnames.two.double.ten metadata:9\n<   metric:sample.dupnames.two.float.ten metadata:9\n<   metric:sample.dupnames.two.lights metadata:9\n<   metric:sample.dupnames.two.seconds metadata:9\n<   metric:sample.dupnames.two.write_me metadata:9\n<   metric:sample.dynamic.counter metadata:10\n<   metric:sample.dynamic.discrete metadata:10\n<   metric:sample.dynamic.instant metadata:10\n<   metric:sample.dynamic.meta.metric metadata:9\n<   metric:sample.dynamic.meta.pmdesc.indom metadata:9\n<   metric:sample.dynamic.meta.pmdesc.sem metadata:9\n<   metric:sample.dynamic.meta.pmdesc.type metadata:9\n<   metric:sample.dynamic.meta.pmdesc.units metadata:9\n<   metric:sample.error_check metadata:9\n<   metric:sample.error_code metadata:9\n<   metric:sample.event.highres_records metadata:10\n<   metric:sample.event.no_indom_records metadata:9\n<   metric:sample.event.param_32 metadata:9\n<   metric:sample.event.param_64 metadata:9\n<   metric:sample.event.param_aggregate metadata:9\n<   metric:sample.event.param_double metadata:9\n<   metric:sample.event.param_float metadata:9\n<   metric:sample.event.param_string metadata:9\n<   metric:sample.event.param_u32 metadata:9\n<   metric:sample.event.param_u64 metadata:9\n<   metric:sample.event.records metadata:10\n<   metric:sample.event.reset metadata:9\n<   metric:sample.event.reset_highres metadata:9\n<   metric:sample.event.type metadata:9\n<   metric:sample.float.bin metadata:10\n<   metric:sample.float.bin_ctr metadata:10\n<   metric:sample.float.hundred metadata:9\n<   metric:sample.float.million metadata:9\n<   metric:sample.float.one metadata:9\n<   metric:sample.float.ten metadata:9\n<   metric:sample.float.write_me metadata:9\n<   metric:sample.ghosts.visible metadata:9\n<   metric:sample.hordes.one metadata:10\n<   metric:sample.hordes.two metadata:10\n<   metric:sample.kbyte_ctr metadata:9\n<   metric:sample.kbyte_rate metadata:9\n<   metric:sample.lights metadata:9\n<   metric:sample.load metadata:9\n<   metric:sample.long.bin metadata:10\n<   metric:sample.long.bin_ctr metadata:10\n<   metric:sample.long.hundred metadata:9\n<   metric:sample.long.million metadata:9\n<   metric:sample.long.one metadata:9\n<   metric:sample.long.ten metadata:9\n<   metric:sample.long.write_me metadata:9\n<   metric:sample.longlong.bin metadata:10\n<   metric:sample.longlong.bin_ctr metadata:10\n<   metric:sample.longlong.hundred metadata:9\n<   metric:sample.longlong.million metadata:9\n<   metric:sample.longlong.one metadata:9\n<   metric:sample.longlong.ten metadata:9\n<   metric:sample.longlong.write_me metadata:9\n<   metric:sample.magnitude metadata:9\n<   metric:sample.many.count metadata:9\n<   metric:sample.many.int metadata:10\n<   metric:sample.milliseconds metadata:9\n<   metric:sample.mirage metadata:10\n<   metric:sample.mirage_longlong metadata:10\n<   metric:sample.needprofile metadata:10\n<   metric:sample.negative.ctr.m_32 metadata:9\n<   metric:sample.negative.ctr.m_64 metadata:9\n<   metric:sample.negative.ctr.m_double metadata:9\n<   metric:sample.negative.ctr.m_float metadata:9\n<   metric:sample.negative.discrete.m_32 metadata:9\n<   metric:sample.negative.discrete.m_64 metadata:9\n<   metric:sample.negative.discrete.m_double metadata:9\n<   metric:sample.negative.discrete.m_float metadata:9\n","time":{"start":1760990100000,"stop":1760990104000,"duration":4000}},{"uid":"996c18c9e4d521a9","reportUrl":"https://performancecopilot.github.io/qa-reports/reports/20251019_211912-4482d6ae//#testresult/996c18c9e4d521a9","status":"passed","statusDetails":"","time":{"start":1760903502000,"stop":1760903515000,"duration":13000}},{"uid":"e40590d80cd66326","reportUrl":"https://performancecopilot.github.io/qa-reports/reports/20251018_211924-46969761//#testresult/e40590d80cd66326","status":"passed","statusDetails":"","time":{"start":1760817140000,"stop":1760817154000,"duration":14000}},{"uid":"a44551091135b943","reportUrl":"https://performancecopilot.github.io/qa-reports/reports/20251017_211904-46969761//#testresult/a44551091135b943","status":"passed","statusDetails":"","time":{"start":1760730639000,"stop":1760730652000,"duration":13000}},{"uid":"6b5f62b841c5ef52","reportUrl":"https://performancecopilot.github.io/qa-reports/reports/20251016_212852-46969761//#testresult/6b5f62b841c5ef52","status":"passed","statusDetails":"","time":{"start":1760644477000,"stop":1760644491000,"duration":14000}},{"uid":"73fcc59e737ce67d","reportUrl":"https://performancecopilot.github.io/qa-reports/reports/20251015_212253-ba09268c//#testresult/73fcc59e737ce67d","status":"passed","statusDetails":"","time":{"start":1760558031000,"stop":1760558044000,"duration":13000}},{"uid":"2ef45aa8cee70df1","reportUrl":"https://performancecopilot.github.io/qa-reports/reports/20251015_004011-0d24eb97//#testresult/2ef45aa8cee70df1","status":"passed","statusDetails":"","time":{"start":1760476175000,"stop":1760476189000,"duration":14000}},{"uid":"873401c56fb76436","reportUrl":"https://performancecopilot.github.io/qa-reports/reports/20251013_212512-84bf35c4//#testresult/873401c56fb76436","status":"passed","statusDetails":"","time":{"start":1760385148000,"stop":1760385161000,"duration":13000}},{"uid":"6e654812dc768779","reportUrl":"https://performancecopilot.github.io/qa-reports/reports/20251012_212220-58609e1a//#testresult/6e654812dc768779","status":"passed","statusDetails":"","time":{"start":1760298592000,"stop":1760298605000,"duration":13000}},{"uid":"d50ad6b3bdd374c1","reportUrl":"https://performancecopilot.github.io/qa-reports/reports/20251011_211711-347a464a//#testresult/d50ad6b3bdd374c1","status":"passed","statusDetails":"","time":{"start":1760212208000,"stop":1760212221000,"duration":13000}},{"uid":"a70ab693240d3084","reportUrl":"https://performancecopilot.github.io/qa-reports/reports/20251011_021431-ab10ad19//#testresult/a70ab693240d3084","status":"passed","statusDetails":"","time":{"start":1760143770000,"stop":1760143784000,"duration":14000}},{"uid":"6a02bf48cbb1057b","reportUrl":"https://performancecopilot.github.io/qa-reports/reports/20251009_224938-09d2f320//#testresult/6a02bf48cbb1057b","status":"passed","statusDetails":"","time":{"start":1760043881000,"stop":1760043895000,"duration":14000}},{"uid":"32125c8554b94a3c","reportUrl":"https://performancecopilot.github.io/qa-reports/reports/20251008_233245-e3c8f18b//#testresult/32125c8554b94a3c","status":"passed","statusDetails":"","time":{"start":1759953231000,"stop":1759953244000,"duration":13000}},{"uid":"1ca8fe5068272a01","reportUrl":"https://performancecopilot.github.io/qa-reports/reports/20251007_215511-e38511ec//#testresult/1ca8fe5068272a01","status":"passed","statusDetails":"","time":{"start":1759866766000,"stop":1759866779000,"duration":13000}},{"uid":"d59b7d8a59bf21ef","reportUrl":"https://performancecopilot.github.io/qa-reports/reports/20251006_223516-1ae23c20//#testresult/d59b7d8a59bf21ef","status":"passed","statusDetails":"","time":{"start":1759780424000,"stop":1759780436000,"duration":12000}},{"uid":"2e849ab3d70f5971","reportUrl":"https://performancecopilot.github.io/qa-reports/reports/20251005_211611-96be163a//#testresult/2e849ab3d70f5971","status":"passed","statusDetails":"","time":{"start":1759693856000,"stop":1759693869000,"duration":13000}}]},"tags":[]},"source":"65ce64b13ed88a4f.json","parameterValues":[]}