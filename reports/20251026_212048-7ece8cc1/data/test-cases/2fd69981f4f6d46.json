{"uid":"2fd69981f4f6d46","name":"QA 1317","fullName":"QA #1317 on fedora41-container","historyId":"1317@fedora41-container","time":{"start":1761510909000,"stop":1761510913000,"duration":4000},"description":"PCP QA Test No. 1317\n\nMuti-threading and __pmProcess*() family\n\nvalgrind variant, see qa/1316 for the non-valgrind variant\n\n\n\nCopyright (c) 2021 Ken McDonell.  All Rights Reserved.\n\n\n\n","descriptionHtml":"<p>PCP QA Test No. 1317</p>\n<p>Muti-threading and __pmProcess*() family</p>\n<p>valgrind variant, see qa/1316 for the non-valgrind variant</p>\n<p>Copyright (c) 2021 Ken McDonell.  All Rights Reserved.</p>\n","status":"passed","statusMessage":"","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"suite","value":"fedora41-container"},{"name":"host","value":"fedora41-container"},{"name":"epic","value":"libpcp"},{"name":"epic","value":"local"},{"name":"epic","value":"valgrind"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[{"name":"Source","url":"https://github.com/performancecopilot/pcp/tree/7ece8cc1108951c8d18f5df575f46b2a0cfcacca/qa/1317","type":"test_case"},{"name":"Expected output","url":"https://github.com/performancecopilot/pcp/tree/7ece8cc1108951c8d18f5df575f46b2a0cfcacca/qa/1317.out","type":"test_case"}],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":19,"broken":0,"skipped":0,"passed":229,"unknown":0,"total":248},"items":[{"uid":"6e48189a0dba7e3f","reportUrl":"https://performancecopilot.github.io/qa-reports/reports/20251025_212301-7ece8cc1//#testresult/6e48189a0dba7e3f","status":"passed","statusDetails":"","time":{"start":1761424062000,"stop":1761424066000,"duration":4000}},{"uid":"446c38f001986af0","reportUrl":"https://performancecopilot.github.io/qa-reports/reports/20251024_212524-7ece8cc1//#testresult/446c38f001986af0","status":"passed","statusDetails":"","time":{"start":1761338198000,"stop":1761338202000,"duration":4000}},{"uid":"376f9940a84c6190","reportUrl":"https://performancecopilot.github.io/qa-reports/reports/20251023_212002-95afa073//#testresult/376f9940a84c6190","status":"passed","statusDetails":"","time":{"start":1761251439000,"stop":1761251442000,"duration":3000}},{"uid":"f94976d46a6b6632","reportUrl":"https://performancecopilot.github.io/qa-reports/reports/20251022_212354-95afa073//#testresult/f94976d46a6b6632","status":"failed","statusDetails":"output mismatch (see 1317.out.bad)\n18a19,40\n> Thread 4:\n> Conditional jump or move depends on uninitialised value(s)\n> at 0x499EAEF: _IO_flush_all (in /usr/lib64/libc.so.6)\n> by 0x499F07C: _IO_cleanup (in /usr/lib64/libc.so.6)\n> by 0x49B7A41: __libc_freeres (in /usr/lib64/libc.so.6)\n> by 0x48431E7: _vgnU_freeres (vg_preloaded.c:103)\n> by 0x48CB222: __pmProcessPipe (exec.c:612)\n> by 0x4001F4E: func_C (multithread14.c:285)\n> by 0x49A4723: start_thread (in /usr/lib64/libc.so.6)\n> by 0x4A28613: clone (in /usr/lib64/libc.so.6)\n> {\n>    <insert_a_suppression_name_here>\n>    Memcheck:Cond\n>    fun:_IO_flush_all\n>    fun:_IO_cleanup\n>    fun:__libc_freeres\n>    fun:_vgnU_freeres\n>    fun:__pmProcessPipe\n>    fun:func_C\n>    fun:start_thread\n>    fun:clone\n> }\n20a43,44\n> Use --track-origins=yes to see where uninitialised values come from\n> ERROR SUMMARY: 2 errors from 1 contexts ...\nCheck local PMCD is still alive ...\n","time":{"start":1761165546000,"stop":1761165549000,"duration":3000}},{"uid":"237310f632975fc6","reportUrl":"https://performancecopilot.github.io/qa-reports/reports/20251021_212327-68aa730c//#testresult/237310f632975fc6","status":"passed","statusDetails":"","time":{"start":1761079222000,"stop":1761079225000,"duration":3000}},{"uid":"36f8fe0eb4b3d2fb","reportUrl":"https://performancecopilot.github.io/qa-reports/reports/20251020_214124-4482d6ae//#testresult/36f8fe0eb4b3d2fb","status":"passed","statusDetails":"","time":{"start":1760992627000,"stop":1760992631000,"duration":4000}},{"uid":"d9017d8e02380bdc","reportUrl":"https://performancecopilot.github.io/qa-reports/reports/20251019_211912-4482d6ae//#testresult/d9017d8e02380bdc","status":"passed","statusDetails":"","time":{"start":1760906024000,"stop":1760906028000,"duration":4000}},{"uid":"4a1c8f829756c183","reportUrl":"https://performancecopilot.github.io/qa-reports/reports/20251018_211924-46969761//#testresult/4a1c8f829756c183","status":"passed","statusDetails":"","time":{"start":1760819619000,"stop":1760819623000,"duration":4000}},{"uid":"d078fa0b02d3c549","reportUrl":"https://performancecopilot.github.io/qa-reports/reports/20251017_211904-46969761//#testresult/d078fa0b02d3c549","status":"passed","statusDetails":"","time":{"start":1760733329000,"stop":1760733333000,"duration":4000}},{"uid":"bee9cfe7d591bf1","reportUrl":"https://performancecopilot.github.io/qa-reports/reports/20251016_212852-46969761//#testresult/bee9cfe7d591bf1","status":"passed","statusDetails":"","time":{"start":1760647099000,"stop":1760647103000,"duration":4000}},{"uid":"a100a88ed7efafa3","reportUrl":"https://performancecopilot.github.io/qa-reports/reports/20251015_212253-ba09268c//#testresult/a100a88ed7efafa3","status":"passed","statusDetails":"","time":{"start":1760560749000,"stop":1760560753000,"duration":4000}},{"uid":"e0aecfec2208367f","reportUrl":"https://performancecopilot.github.io/qa-reports/reports/20251015_004011-0d24eb97//#testresult/e0aecfec2208367f","status":"passed","statusDetails":"","time":{"start":1760474652000,"stop":1760474656000,"duration":4000}},{"uid":"650cbf40afa980e0","reportUrl":"https://performancecopilot.github.io/qa-reports/reports/20251013_212512-84bf35c4//#testresult/650cbf40afa980e0","status":"passed","statusDetails":"","time":{"start":1760387337000,"stop":1760387340000,"duration":3000}},{"uid":"672f8b2a92f30eda","reportUrl":"https://performancecopilot.github.io/qa-reports/reports/20251012_212220-58609e1a//#testresult/672f8b2a92f30eda","status":"passed","statusDetails":"","time":{"start":1760301150000,"stop":1760301154000,"duration":4000}},{"uid":"56e9ddeb45800ca4","reportUrl":"https://performancecopilot.github.io/qa-reports/reports/20251011_211711-347a464a//#testresult/56e9ddeb45800ca4","status":"passed","statusDetails":"","time":{"start":1760214803000,"stop":1760214807000,"duration":4000}},{"uid":"3c2a01702905427b","reportUrl":"https://performancecopilot.github.io/qa-reports/reports/20251011_021431-ab10ad19//#testresult/3c2a01702905427b","status":"failed","statusDetails":"output mismatch (see 1317.out.bad)\n11a12,33\n> Thread 8:\n> Conditional jump or move depends on uninitialised value(s)\n> at 0x499EAEF: _IO_flush_all (in /usr/lib64/libc.so.6)\n> by 0x499F07C: _IO_cleanup (in /usr/lib64/libc.so.6)\n> by 0x49B7A41: __libc_freeres (in /usr/lib64/libc.so.6)\n> by 0x48431E7: _vgnU_freeres (vg_preloaded.c:103)\n> by 0x48CB222: __pmProcessPipe (exec.c:612)\n> by 0x4001F4E: func_C (multithread14.c:285)\n> by 0x49A4723: start_thread (in /usr/lib64/libc.so.6)\n> by 0x4A28613: clone (in /usr/lib64/libc.so.6)\n> {\n>    <insert_a_suppression_name_here>\n>    Memcheck:Cond\n>    fun:_IO_flush_all\n>    fun:_IO_cleanup\n>    fun:__libc_freeres\n>    fun:_vgnU_freeres\n>    fun:__pmProcessPipe\n>    fun:func_C\n>    fun:start_thread\n>    fun:clone\n> }\n12a35,36\n> Use --track-origins=yes to see where uninitialised values come from\n> ERROR SUMMARY: 1 errors from 1 contexts ...\nCheck local PMCD is still alive ...\n","time":{"start":1760131565000,"stop":1760131569000,"duration":4000}},{"uid":"83d6528cd7469137","reportUrl":"https://performancecopilot.github.io/qa-reports/reports/20251009_224938-09d2f320//#testresult/83d6528cd7469137","status":"passed","statusDetails":"","time":{"start":1760046812000,"stop":1760046816000,"duration":4000}},{"uid":"c54430496752a351","reportUrl":"https://performancecopilot.github.io/qa-reports/reports/20251008_233245-e3c8f18b//#testresult/c54430496752a351","status":"failed","statusDetails":"output mismatch (see 1317.out.bad)\n16a17,38\n> Thread 8:\n> Conditional jump or move depends on uninitialised value(s)\n> at 0x499EAEF: _IO_flush_all (in /usr/lib64/libc.so.6)\n> by 0x499F07C: _IO_cleanup (in /usr/lib64/libc.so.6)\n> by 0x49B7A41: __libc_freeres (in /usr/lib64/libc.so.6)\n> by 0x48431E7: _vgnU_freeres (vg_preloaded.c:103)\n> by 0x48CB222: __pmProcessPipe (exec.c:612)\n> by 0x4001F4E: func_C (multithread14.c:285)\n> by 0x49A4723: start_thread (in /usr/lib64/libc.so.6)\n> by 0x4A28613: clone (in /usr/lib64/libc.so.6)\n> {\n>    <insert_a_suppression_name_here>\n>    Memcheck:Cond\n>    fun:_IO_flush_all\n>    fun:_IO_cleanup\n>    fun:__libc_freeres\n>    fun:_vgnU_freeres\n>    fun:__pmProcessPipe\n>    fun:func_C\n>    fun:start_thread\n>    fun:clone\n> }\n17a40,63\n> Use --track-origins=yes to see where uninitialised values come from\n> ERROR SUMMARY: 1 errors from 1 contexts ...\n> Thread 4:\n> Conditional jump or move depends on uninitialised value(s)\n> at 0x499EAEF: _IO_flush_all (in /usr/lib64/libc.so.6)\n> by 0x499F07C: _IO_cleanup (in /usr/lib64/libc.so.6)\n> by 0x49B7A41: __libc_freeres (in /usr/lib64/libc.so.6)\n> by 0x48431E7: _vgnU_freeres (vg_preloaded.c:103)\n> by 0x48CB222: __pmProcessPipe (exec.c:612)\n> by 0x4001F4E: func_C (multithread14.c:285)\n> by 0x49A4723: start_thread (in /usr/lib64/libc.so.6)\n> by 0x4A28613: clone (in /usr/lib64/libc.so.6)\n> {\n>    <insert_a_suppression_name_here>\n>    Memcheck:Cond\n>    fun:_IO_flush_all\n>    fun:_IO_cleanup\n>    fun:__libc_freeres\n>    fun:_vgnU_freeres\n>    fun:__pmProcessPipe\n>    fun:func_C\n>    fun:start_thread\n>    fun:clone\n> }\n18a65,66\n> Use --track-origins=yes to see where uninitialised values come from\n> ERROR SUMMARY: 1 errors from 1 contexts ...\nCheck local PMCD is still alive ...\n","time":{"start":1759955899000,"stop":1759955902000,"duration":3000}},{"uid":"27cd1b5bb31d6ab7","reportUrl":"https://performancecopilot.github.io/qa-reports/reports/20251007_215511-e38511ec//#testresult/27cd1b5bb31d6ab7","status":"passed","statusDetails":"","time":{"start":1759869408000,"stop":1759869412000,"duration":4000}},{"uid":"bae8e213bbd6260","reportUrl":"https://performancecopilot.github.io/qa-reports/reports/20251006_223516-1ae23c20//#testresult/bae8e213bbd6260","status":"failed","statusDetails":"output mismatch (see 1317.out.bad)\n23a24,45\n> Thread 4:\n> Conditional jump or move depends on uninitialised value(s)\n> at 0x499EAEF: _IO_flush_all (in /usr/lib64/libc.so.6)\n> by 0x499F07C: _IO_cleanup (in /usr/lib64/libc.so.6)\n> by 0x49B7A41: __libc_freeres (in /usr/lib64/libc.so.6)\n> by 0x48431E7: _vgnU_freeres (vg_preloaded.c:103)\n> by 0x48CB222: __pmProcessPipe (exec.c:612)\n> by 0x4001F4E: func_C (multithread14.c:285)\n> by 0x49A4723: start_thread (in /usr/lib64/libc.so.6)\n> by 0x4A28613: clone (in /usr/lib64/libc.so.6)\n> {\n>    <insert_a_suppression_name_here>\n>    Memcheck:Cond\n>    fun:_IO_flush_all\n>    fun:_IO_cleanup\n>    fun:__libc_freeres\n>    fun:_vgnU_freeres\n>    fun:__pmProcessPipe\n>    fun:func_C\n>    fun:start_thread\n>    fun:clone\n> }\n25a48,49\n> Use --track-origins=yes to see where uninitialised values come from\n> ERROR SUMMARY: 1 errors from 1 contexts ...\nCheck local PMCD is still alive ...\n","time":{"start":1759782496000,"stop":1759782499000,"duration":3000}}]},"tags":[]},"source":"2fd69981f4f6d46.json","parameterValues":[]}